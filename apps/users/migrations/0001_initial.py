# Generated by Django 5.0.2 on 2024-02-09 09:49

import django.db.models.deletion
import users.models.token
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('username', models.CharField(blank=True, max_length=32, null=True, unique=True, verbose_name='Username')),
                ('full_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Full name')),
                ('password', models.CharField(blank=True, max_length=255, null=True, verbose_name='Password')),
                ('email', models.EmailField(blank=True, max_length=128, unique=True, verbose_name='Email')),
                ('telegram_id', models.BigIntegerField(default=0, verbose_name='Telegram')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/', verbose_name='Image')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='Phone number')),
                ('linkedin_url', models.URLField(blank=True, null=True, verbose_name='Linkedin')),
                ('github_url', models.URLField(blank=True, null=True, verbose_name='Github')),
                ('instagram_url', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('facebook_url', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is staff?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Is superuser?')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jwt', models.CharField(max_length=512, unique=True, verbose_name='JWT')),
                ('jwt_expires', models.DateTimeField(default=users.models.token.default_expiration_time, verbose_name='JWT Expires')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'db_table': 'jwt_tokens',
                'ordering': ('-id',),
            },
        ),
    ]
